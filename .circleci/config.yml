version: 2

run_test: &run_test
  steps:
    - checkout
    - setup_remote_docker
    - run: mkdir test-reports
    - run:
        name: Download Selenium
        command: |
          curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
    - run:
        name: Start Selenium
        command: |
          java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
        background: true

    - restore_cache:
        key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
    - restore_cache:
        key: v1-gradle-cache-{{ checksum "build.gradle" }}
#    - run:
#        name: create docker network
#        command: docker network create grid
#    - run:
#        name: install selenium-hub
#        command: docker run -d --rm -p 4444:4444 --net grid --name selenium-hub selenium/hub:3.11.0
#    - run:
#        name: install selenium-node
#        command: docker run -d --rm --net grid -e HUB_HOST=selenium-hub -v /dev/shm:/dev/shm selenium/node-chrome:3.11.0
    - run: gradle test
#        name: Run Tests
#        command:
#    - run:
#        name: install-npm
#        command: npm install
#
#          # run tests!
#    - run:
#        name: run tests
#        command: node src/test/java/soat/SoatTest.java

    - run:
        name: Save test results
        command: |
          mkdir -p ~/test-results/junit/
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
        when: always
    - save_cache:
        paths:
          - ~/.gradle/wrapper
        key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
    - save_cache:
        paths:
          - ~/.gradle/caches
        key: v1-gradle-cache-{{ checksum "build.gradle" }}
    - store_test_results:
        path: ~/test-results
    - store_artifacts:
        path: ~/test-results/junit

jobs:
  deploy_prod:
    docker:
      - image: circleci/node:7.10
      - image: selenium/standalone-chrome:3.11.0
        working_directory: ~/repo
    <<: *run_test

workflows:
  version: 2
  build:
    jobs:
      - deploy_prod:
          filters:
            branches:
              only:
                - master
                - /automation\/.*/

